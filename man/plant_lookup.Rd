% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/plant_lookup.R
\name{plant_lookup}
\alias{plant_lookup}
\alias{plant_lookup_version_current}
\alias{plant_lookup_versions}
\title{Plant lookup table}
\usage{
plant_lookup(version = plant_lookup_version_current(),
  include_counts = FALSE)

plant_lookup_versions(all = FALSE)

plant_lookup_version_current(all = FALSE)
}
\arguments{
\item{version}{Version number.  The default will load the most
recent version on your computer or the most recent version known
to the package if you have never downloaded the data before.}

\item{include_counts}{Logical: Include a column of genus counts as
\code{number.of.species}.}

\item{all}{test against all version known to the package?}
}
\description{
Lookup table relating plant genera, families and orders along with
number of species in each genus.  Data persists across package
installations.
}
\details{
The data for this lookup primarily comes from two sources:

1. The Plant List v1.1. (http://www.theplantlist.org/) for
accepted genera to families and species richness within each
genera.  Note that we do not consider hybrids (e.g. Genus x
species) as species for this count while the plant list summary
statistics do, so the counts will not line up exactly.

2. APWeb (http://www.mobot.org/MOBOT/research/APweb/) for family
level synonymies and family to order for all vascular plant families.
Note that there is not currently order level information available for Bryophytes.

3. We correct some spelling
errors, special character issues, genera listed in multiple families, and a few other errors from The
Plant List.
}
\examples{
#
# see the format of the resource
head(plant_lookup(include_counts = TRUE))
#
# load the data.frame into memory
pl<-plant_lookup(include_counts = TRUE)
#
# return family, order, and number of species for the genus Eucalyptus
pl$family[pl$genus=="Eucalyptus"]
pl$order[pl$genus=="Eucalyptus"]
pl$number.of.species[pl$genus=="Eucalyptus"]
#
# find the number of accepted species within the Myrtaceae
sum(pl$number.of.species[pl$family=="Myrtaceae"])
}

